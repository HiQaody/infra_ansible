---
- name: Installer fail2ban et ufw
  apt:
    name:
      - fail2ban
      - ufw
    state: present
    update_cache: yes

- name: Activer le service fail2ban
  service:
    name: fail2ban
    state: started
    enabled: yes

- name: Déployer une configuration fail2ban personnalisée (jail.local)
  copy:
    dest: /etc/fail2ban/jail.local
    content: |
      [sshd]
      enabled = true
      port = ssh
      filter = sshd
      logpath = /var/log/auth.log
      maxretry = 5
      bantime = 3600
      findtime = 600
    owner: root
    group: root
    mode: '0644'
  notify: Restart fail2ban

- name: Assurer le redémarrage de fail2ban si config changée
  meta: flush_handlers

- name: Configurer la politique par défaut UFW (deny incoming, allow outgoing)
  ufw:
    state: enabled
    policy: deny
    direction: incoming

- name: Autoriser les connexions SSH
  ufw:
    rule: allow
    name: OpenSSH

- name: Autoriser le port Jenkins
  ufw:
    rule: allow
    port: "{{ jenkins_port }}"
    proto: tcp

- name: Autoriser le port Minio Console
  ufw:
    rule: allow
    port: "{{ minio_console_port }}"
    proto: tcp

- name: Autoriser le port PostgreSQL
  ufw:
    rule: allow
    port: 5432
    proto: tcp

- name: Autoriser le port pgAdmin
  ufw:
    rule: allow
    port: "{{ pgadmin_port }}"
    proto: tcp

- name: Autoriser le port Portainer
  ufw:
    rule: allow
    port: "{{ portainer_web_port }}"
    proto: tcp

- name: Autoriser le port 80 (HTTP)
  ufw:
    rule: allow
    port: 80
    proto: tcp

- name: Autoriser le port 443 (HTTPS)
  ufw:
    rule: allow
    port: 443
    proto: tcp

- name: Autoriser le port Harbor NodePort
  ufw:
    rule: allow
    port: "{{ harbor_nodeport }}"
    proto: tcp

- name: Redémarrer fail2ban si nécessaire
  service:
    name: fail2ban
    state: restarted
  when: false # handler utilisé