---
- name: Mettre à jour le système
  apt:
    update_cache: yes
    upgrade: dist

- name: Télécharger la dernière version de MinIO
  get_url:
    url: "{{ minio_bin_url }}"
    dest: /tmp/minio
    mode: '0755'

- name: Installer MinIO binaire
  copy:
    src: /tmp/minio
    dest: "{{ minio_bin_path }}"
    remote_src: yes
    mode: '0755'

- name: Créer l'utilisateur MinIO
  user:
    name: "{{ minio_user }}"
    system: yes
    shell: /sbin/nologin
    state: present

- name: Créer le dossier de stockage MinIO
  file:
    path: "{{ minio_storage_dir }}"
    state: directory
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: '0755'

- name: Créer le fichier de configuration MinIO
  copy:
    dest: "{{ minio_env_file }}"
    content: |
      MINIO_ACCESS_KEY={{ minio_access_key }}
      MINIO_SECRET_KEY={{ minio_secret_key }}
    owner: root
    group: root
    mode: '0644'

- name: Créer le service systemd pour MinIO
  copy:
    dest: "{{ minio_service_file }}"
    content: |
      [Unit]
      Description=MinIO
      Documentation=https://docs.min.io
      Wants=network-online.target
      After=network-online.target

      [Service]
      User={{ minio_user }}
      Group={{ minio_group }}
      ExecStart={{ minio_bin_path }} server {{ minio_storage_dir }} --console-address ":{{ minio_console_port }}"
      EnvironmentFile={{ minio_env_file }}
      Restart=always
      LimitNOFILE=65536

      [Install]
      WantedBy=multi-user.target
    owner: root
    group: root
    mode: '0644'

- name: Recharger systemd
  command: systemctl daemon-reload

- name: Démarrer et activer MinIO
  service:
    name: minio
    state: started
    enabled: yes

- name: Créer la configuration Nginx pour MinIO
  copy:
    dest: "{{ nginx_minio_conf }}"
    content: |
      server {
          server_name {{ minio_domain }};
          location / {
              proxy_pass http://localhost:{{ minio_console_port }};
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      }
    owner: root
    group: root
    mode: '0644'

- name: Activer le site Nginx pour MinIO
  file:
    src: "{{ nginx_minio_conf }}"
    dest: "/etc/nginx/sites-enabled/minio.itdcmada.mg"
    state: link

- name: Vérifier la configuration Nginx
  command: nginx -t
  register: nginx_test
  changed_when: false

- name: Redémarrer Nginx
  service:
    name: nginx
    state: restarted

# Pour la partie SSL, tu peux ajouter ce bloc si Certbot est installé :
- name: Générer le certificat SSL avec Let's Encrypt (Certbot)
  command: >
    certbot --nginx -d {{ minio_domain }}
  args:
    creates: "/etc/letsencrypt/live/{{ minio_domain }}/fullchain.pem"
  when: minio_domain is defined

# Pour info/affichage :
- name: Afficher accès MinIO
  debug:
    msg: "Accède à MinIO sur : https://{{ minio_domain }} avec {{ minio_access_key }} / {{ minio_secret_key }}"