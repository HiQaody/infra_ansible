---
- name: Créer le dossier de données MinIO
  file:
    path: "{{ minio_data_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Générer un access_key aléatoire si non fourni
  set_fact:
    minio_access_key: "{{ lookup('password', '/dev/null length=20 chars=ascii_letters') }}"
  when: minio_access_key|length == 0

- name: Générer un secret_key aléatoire si non fourni
  set_fact:
    minio_secret_key: "{{ lookup('password', '/dev/null length=40 chars=ascii_letters,digits') }}"
  when: minio_secret_key|length == 0

- name: Générer certificat SSL auto-signé si activé et non fourni
  command: >
    openssl req -x509 -nodes -days 365 -newkey rsa:2048
    -keyout {{ minio_data_dir }}/minio.key
    -out {{ minio_data_dir }}/minio.crt
    -subj "/C=FR/ST=France/L=Paris/O=MinIO/OU=IT/CN=minio.local"
  args:
    creates: "{{ minio_data_dir }}/minio.crt"
  when: minio_ssl|bool and (minio_ssl_cert_src == "" or minio_ssl_key_src == "")

- name: Copier le certificat SSL fourni
  copy:
    src: "{{ minio_ssl_cert_src }}"
    dest: "{{ minio_data_dir }}/minio.crt"
    owner: root
    group: root
    mode: 0600
  when: minio_ssl|bool and minio_ssl_cert_src|length > 0

- name: Copier la clé SSL fournie
  copy:
    src: "{{ minio_ssl_key_src }}"
    dest: "{{ minio_data_dir }}/minio.key"
    owner: root
    group: root
    mode: 0600
  when: minio_ssl|bool and minio_ssl_key_src|length > 0

- name: Vérifier si MinIO est déjà déployé
  docker_container_info:
    name: minio
  register: minio_info
  ignore_errors: true

- name: Arrêter et supprimer MinIO existant (si déjà déployé)
  docker_container:
    name: minio
    state: absent
    force_kill: yes
  when: minio_info.container is defined

- name: Lancer MinIO (SSL activé)
  docker_container:
    name: minio
    image: minio/minio:latest
    restart_policy: always
    ports:
      - "{{ minio_port }}:9000"
    volumes:
      - "{{ minio_data_dir }}:/data"
      - "{{ minio_data_dir }}/minio.crt:/root/.minio/certs/public.crt"
      - "{{ minio_data_dir }}/minio.key:/root/.minio/certs/private.key"
    env:
      MINIO_ROOT_USER: "{{ minio_access_key }}"
      MINIO_ROOT_PASSWORD: "{{ minio_secret_key }}"
    command: server /data --console-address ":{{ minio_port }}"
  when: minio_ssl|bool

- name: Lancer MinIO (HTTP classique)
  docker_container:
    name: minio
    image: minio/minio:latest
    restart_policy: always
    ports:
      - "{{ minio_port }}:9000"
    volumes:
      - "{{ minio_data_dir }}:/data"
    env:
      MINIO_ROOT_USER: "{{ minio_access_key }}"
      MINIO_ROOT_PASSWORD: "{{ minio_secret_key }}"
    command: server /data --console-address ":{{ minio_port }}"
  when: not minio_ssl|bool

- name: Afficher les accès MinIO
  debug:
    msg: |
      MinIO est prêt !
      URL: http://{{ ansible_default_ipv4.address }}:{{ minio_port }}
      Accès : {{ minio_access_key }}
      Secret: {{ minio_secret_key }}
